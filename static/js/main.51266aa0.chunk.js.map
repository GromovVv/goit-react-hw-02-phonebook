{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/ContactListItem/ContactListItem.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleInputChange","event","currentTarget","value","console","log","setState","handleSubmit","preventDefault","props","submit","reset","this","onSubmit","htmlFor","type","id","pattern","title","onChange","required","Component","ContactList","children","className","Filter","filter","changeFilter","ContactListItem","contacts","onDeleteContact","map","onClick","App","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","addContact","some","alert","deleteContact","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51266aa0.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport shortid from 'shortid';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    console.log(name, value);\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    event.preventDefault();\r\n\r\n    this.props.submit(name, number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  \r\n  render() {\r\n      const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              id={this.nameInputId}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              id={this.numberInputId}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n          </label>\r\n          \r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import './ContactList.scss';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ children }) => {\r\n  return (\r\n    <ul className=\"Contact__list\">\r\n      {children}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ContactList;\r\n","import './Filter.scss';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Filter by name {'  '}\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          title=\"Введите имя или номер абонента\"\r\n          onChange={changeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './ContactListItem.scss';\r\n\r\nconst ContactListItem = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <li key={id} className=\"ContactList__item\">\r\n            {name}: {number}\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)} >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport shortid from 'shortid';\n\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport ContactListItem from './Components/ContactListItem'\n\nimport 'modern-normalize/modern-normalize.css';\nimport './App.scss';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.number,\n  };\n\n  state = {\n    contacts: [\n      {id: shortid.generate(), name: 'Rosie Simpson', number: '459-12-56'},\n      {id: shortid.generate(), name: 'Hermione Kline', number: '443-89-12'},\n      {id: shortid.generate(), name: 'Eden Clements', number: '645-17-79'},\n      {id: shortid.generate(), name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === name || contact.number === number)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    } \n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n\n\n  render() {\n    const { filter, contacts } = this.state;\n   \n    return (\n      <div className=\"App\">\n        <h2 className=\"Title\">Phonebook</h2>\n        <ContactForm submit={this.addContact} contacts={contacts} />\n        <h2 className=\"Title\">Contacts</h2>\n        <Filter filter={filter} changeFilter={this.changeFilter} />\n        <ContactList>\n          <ContactListItem\n            contacts={this.getVisibleContacts()}\n            onDeleteContact={this.deleteContact}\n          />\n        </ContactList>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './BasicStyles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}